# list slicing / list methods

my_list = [4, 3, 7, 5, 3, 1, 2, 3]

# [시작점(포함됨):끝(포함안됨)]
# [3:5] => index 3 <= i < 5 결국 index 3,4
# [:끝] => index 시작(혹은 0. 시작애포함) < = i < 끝
# [시작:] => 시작 <= i < 리스트의 마지막을 포함

sl = my_list[2:5]  # index 2부터 5까지. 갯수는 앞뒤 뺀 개 만큼 있음
sl # [7, 5, 3] len(sl) = 5 - 2

my_list[-1]  # 맨뒤. 무조건 마지막 요소
my_list[:-1]  # 마지막을 제외한 모든 요소. 뒤로 돌진 않는다! 
my_list[:]  #my_list와 다를게 없음

my_list[::1]  # my_list와 다를게 없음. step은 쉼표를 기준으로 생각하면 됨!!
# [시작:끝:스텝]
my_list[::2]  #  쉼표를 두개 건너뜀. 두개씩 뛴 값만 나옴 4, 7, 3, 2 가 나옴
my_list[::-1]  #  역순이 나옴!! 뒤로 한 칸 씩 건너뜀
my_list[::-2] #  3, 1, 5, 3
my_list[3:2] #  없어서 아무것도 안나옴. 빈리스트가 나옴 []


